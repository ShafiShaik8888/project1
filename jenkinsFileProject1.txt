pipeline {
    agent any
    
    tools{
        jdk'jdk17'
        maven 'maven3'
    }
    
    environment {
        SCANNER_HOME=tool 'sonar-scanner'
    }

    
    stages {
        stage('Git Checkout') {
            steps {
                https://github.com/ShafiShaik8888/project1.git
            }
        }
        stage('Compile') {
            steps {
                 sh "mvn compile"
            }
        }
        stage('Test') {
            steps {
                sh "mvn test"
            }
        }
        
        stage('Trivy FS Scan') {
            steps {
                sh "trivy fs --format table -o fs.html . "
            }
        }
        
        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv(credentialsId: 'sonar-server') {
                sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=project1 -Dsonar.projectKey=project1 \
                       -Dsonar.java.binaries=target '''
                }
            }
        }
        
        stage('Build') {
            steps {
                sh "mvn package"
            }
        }
        
        stage('publish Artifacts') {
            steps {
                withMaven(globalMavenSettingsConfig: '', jdk: 'jdk17', maven: 'maven3', mavenSettingsConfig: '', traceability: true) {
                 sh "mvn deploy " 
                }
            }
        }
        
        stage('Docker Buil & Tag') {
            steps {
                script{
                 withDockerRegistry(credentials: 'docker-cred' , toolName :'docker') {
                 sh "docker build -t shaik88/app:latest ."
                }
               }
            }
        }
        
        stage('Trivy Image Scan ') {
            steps {
                sh "trivy fs --format table -o image.html shaik88/app:latest "
            }
        }
        
        stage('Docker Push Image ') {
            steps {
                script{
                 withDockerRegistry(credentials: 'docker-cred' , toolName :'docker') {
                 sh "docker push -t shaik88/app:latest"
                }
               }
            }
        }
    }
    
    
}